<div class="container mt-5">
  <div class="row justify-content-center">
    <div class="col-lg-10">
      <div class="card shadow-lg p-4">
        <h2>Edit Event</h2>
        <%= form_for @event, url: event_path(@event), method: :patch, html: { class: "form-horizontal form-with-locations form-with-photos", multipart: true  } do |f| %>
          <div class="row">
            <div class="col-md-10 mb-3">
              <%= render "common_fields_form/name_field", f: f, resource: @event, required: true, label: "Event Name" %>
            </div>
            <div class="col-md-2 mb-3">
              <%= render "common_fields_form/max_participants_field", f: f, resource: @event, required: true  %>
            </div>
          </div>
          <div class="mb-3">
            <%= render "common_fields_form/description_field", f: f, resource: @event %>
          </div>
          <div class="row">
            <div class="col-md-3 mb-3">
              <%= render "common_fields_form/beginning_date_field", f: f, resource: @event, required: true  %>
            </div>
            <div class="col-md-3 mb-3">
              <%= render "common_fields_form/beginning_time_field", f: f, resource: @event, required: true  %>
            </div>
            <div class="col-md-3 mb-3">
              <%= render "common_fields_form/ending_date_field", f: f, resource: @event, required: true  %>
            </div>
            <div class="col-md-3 mb-3">
              <%= render "common_fields_form/ending_time_field", f: f, resource: @event, required: true  %>
            </div>
          </div>
          <div class="row">
            <div class="col-md-3 mb-3">
              <%= render "common_fields_form/country_field", f: f, resource: @event, required: true %>
            </div>
            <div class="col-md-3 mb-3">
              <%= render "common_fields_form/city_field", f: f, resource: @event, required: true  %>
            </div>
            <div class="col-md-3 mb-3">
              <%= render "common_fields_form/cap_field", f: f, resource: @event, required: true  %>
            </div>
            <div class="col-md-3 mb-3">
              <%= render "common_fields_form/province_field", f: f, resource: @event, required: true  %>
            </div>
          </div>
          <div class="mb-3">
            <%= render "common_fields_form/address_field", f: f, resource: @event, required: true  %>
          </div>
          <div class="mb-3">
            <!-- PHOTO -->
            <% @event.photos.each_with_index do |photo, index| %>
              <div class="input-group mb-3 input-group-photo" id="existing-input-<%= photo.id %>">
                <div class="image-preview-container d-flex justify-content-center align-items-center me-2">
                  <%= image_tag photo,  width: 100%>
                </div>
                <input type="text" class="form-control" value="<%= photo.filename %>" readonly>
                <button class="btn btn-outline-danger photo-delete-existing" type="button" data-photo-id="<%= photo.id %>">
                  <i class="bi bi-x-lg"></i>
                </button>
              </div>
            <% end %>
            <%= render "common_fields_form/photo_field", f:f, resource: @event %>
            <!-- END PHOTO -->
          </div>
          <%= render "common_fields_form/display_errors", f: f, resource: @event, required: true  %>
          <div class="actions d-grid gap-2">
            <%= f.submit "Save changes", class: "btn btn-primary" %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>
<script>
  var photoInputCount = 0
  var maxPhotos = 3; // Maximum number of photos
  var id_counter = 0;

    document.addEventListener("DOMContentLoaded", function() {

      // delete button for existing photos (send delete requests to Rails server)
      document.querySelectorAll('.photo-delete-existing').forEach(button => {
      button.addEventListener('click', function() {
        console.log("delete an existing photo");
        const photoId = this.getAttribute('data-photo-id');
        console.log(photoId);
        delete_single_photo(photoId);
        });
    });

    // Initialize the photoInputCount variable
    var existingPhotos = document.querySelectorAll('.input-group-photo').length;
    photoInputCount = existingPhotos; // Initialize with the number of already displayed photos
    id_counter = existingPhotos;


    // add a photo button is clicked
    document.getElementById('add-photo-button').addEventListener('click', function() {
      add_element_photo();
    });

      //click on the add file button (to create the first)
      console.log(photoInputCount);
      if (photoInputCount < maxPhotos){
        console.log("CLICKED");
        document.getElementById('add-photo-button').click();
      }

    });


  // Function to update the image preview
  function updateImagePreview(input, previewContainerId) {
    console.log("updateImagePreview");
    if (input.files && input.files[0]) {
      var reader = new FileReader();
      reader.onload = function(e) {
        let previewContainer = document.getElementById(previewContainerId);
        previewContainer.innerHTML = ''; // Clear existing content
        let img = document.createElement('img');
        img.src = e.target.result;
        img.style.maxWidth = '100px'; // Set the preview size here
        img.style.maxHeight = '100px';
        previewContainer.appendChild(img);
      };
      reader.readAsDataURL(input.files[0]);
    }
  }

  // Delete the entire input group
  function deleteElement(element) {
    const elementId = element.id;
    const inputId = elementId.replace('photo-delete-', 'input-');

    const inputElement = document.getElementById(inputId);
    console.log("delete " +inputElement);
    if (inputElement) {
      inputElement.remove();
      photoInputCount--;
      checkVisibility();
    }
  }

  function checkVisibility(){
    if (photoInputCount < maxPhotos) {
        document.getElementById('add-photo-button').style.display = 'block';
      }
    else{
      document.getElementById('add-photo-button').style.display = 'none';
    }
  }

  function delete_single_photo(photoId){
    fetch('/delete_photo', {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content // Ensure CSRF token is sent
          },
          body: JSON.stringify({ photo_id : photoId })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
              console.log("SUCCESS");
              photoInputCount--;
              checkVisibility();

            document.getElementById(`existing-input-${photoId}`).remove();


            } else {
                // Handle failure
                alert('Try Again');
            }
        })
      .catch(error => console.error('Error:', error));
        
  }

  function add_element_photo(){
    if (photoInputCount < maxPhotos) {
        photoInputCount++;
        id_counter++;

        //add the new input group
        let inputGroup = document.createElement('div');
        inputGroup.setAttribute('class', 'input-group mb-3 input-group-photo');
        inputGroup.setAttribute('id', 'input-' + id_counter);

        // add the input file
        let newInput = document.createElement('input');
        newInput.setAttribute('type', 'file');
        newInput.setAttribute('name', 'event[photos][]');
        newInput.setAttribute('id', 'photo-input-' + photoInputCount);
        newInput.setAttribute('class', 'photo-input form-control');
        newInput.setAttribute('accept', 'image/png,image/jpeg,image/jpg');
        newInput.addEventListener('change', function(event) {
          updateImagePreview(event.target, previewContainer.id);
        });

        //add the delete option
        const deleteButton = document.createElement('button');
        deleteButton.className = 'btn btn-outline-danger photo-delete';
        deleteButton.id = 'photo-delete-' + id_counter;
        deleteButton.type = 'button';
        deleteButton.innerHTML = '<i class="bi bi-x-lg"></i>';
        deleteButton.addEventListener('click', function() {
          deleteElement(inputGroup);
        });

        // Create a container for the image preview
        let previewContainer = document.createElement('div');
        previewContainer.className = 'image-preview-container d-flex justify-content-center align-items-center me-2';
        previewContainer.id = 'preview-' + id_counter;


        //append child
        inputGroup.appendChild(previewContainer);
        inputGroup.appendChild(newInput);
        inputGroup.appendChild(deleteButton);

        document.getElementById('photos-input-container').appendChild(inputGroup);

      }

       //check the value of photoInputCount, when it reaches 3 the button add another photo is hidden
      checkVisibility();
  }
</script>